<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.thinkgem.jeesite.modules.student.dao.StudentProjectpollDao">
    
	<sql id="studentProjectpollColumns">
		a.id AS "id",
		a.polldate AS "polldate",
		a.team AS "team",
		a.score AS "score",
		a.projectname AS "projectname",
		a.location AS "location",
		a.polltype AS "polltype",
		a.classes_id AS "classesId",
		a.source AS "source",
		a.filename AS "filename"
	</sql>
	
	<sql id="studentProjectpollJoins">
	</sql>
    
	<select id="get" resultType="StudentProjectpoll">
		SELECT 
			<include refid="studentProjectpollColumns"/>
		FROM student_projectpoll a
		<include refid="studentProjectpollJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="StudentProjectpoll">
		SELECT 
			<include refid="studentProjectpollColumns"/>
		FROM student_projectpoll a
		<include refid="studentProjectpollJoins"/>
		<where>
			
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="StudentProjectpoll">
		SELECT 
			<include refid="studentProjectpollColumns"/>
		FROM student_projectpoll a
		<include refid="studentProjectpollJoins"/>
		<where>
			
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO student_projectpoll(
			id,
			polldate,
			team,
			score,
			projectname,
			location,
			polltype,
			classes_id,
			source,
			filename
		) VALUES (
			#{id},
			#{polldate},
			#{team},
			#{score},
			#{projectname},
			#{location},
			#{polltype},
			#{classesId},
			#{source},
			#{filename}
		)
	</insert>
	
	<update id="update">
		UPDATE student_projectpoll SET 	
			polldate = #{polldate},
			team = #{team},
			score = #{score},
			projectname = #{projectname},
			location = #{location},
			polltype = #{polltype},
			classes_id = #{classesId},
			source = #{source},
			filename = #{filename}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		DELETE FROM student_projectpoll
		WHERE id = #{id}
	</update>
	
</mapper>